#compdef ns-install-cli

# AUTOMATICALLY GENERATED by `shtab`


_shtab_tyro_ns_install_cli_commands() {
  local _commands=(
    
  )
  _describe 'ns-install-cli commands' _commands
}

_shtab_tyro_ns_install_cli_options=(
  {-h,--help}"[show this help message and exit]:help:"
  "--mode[Choose between installing or uninstalling completions. (default\: install)]:mode:(install uninstall)"
)


_shtab_tyro_ns_install_cli() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_tyro_ns_install_cli_options[(I)${(q)one_or_more}*]} + ${_shtab_tyro_ns_install_cli_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_tyro_ns_install_cli_options+=(': :_shtab_tyro_ns_install_cli_commands' '*::: :->ns-install-cli')
  fi
  _arguments -C -s $_shtab_tyro_ns_install_cli_options

  case $state in
    ns-install-cli)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_tyro_ns_install_cli-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_tyro_ns_install_cli -N ns-install-cli
else
  # autoload from fpath, call function directly
  _shtab_tyro_ns_install_cli "$@"
fi

